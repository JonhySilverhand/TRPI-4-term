{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.buttonitem, button => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: button.id\n    }, _toDisplayString(button.name) + \">\", 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$props","buttonitem","button","key","id","name"],"sources":["D:\\University\\4th_term\\ТРПИ\\lab5-7\\src\\components\\TheButtonsBlock.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"wrapper\">\r\n      <div v-for=\"button in buttonitem\" :key=\"button.id\">{{button.name}}></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props:{\r\n    buttonitem:{\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.container{\r\n  color: #FFFFFF;\r\n  background-color: #4FBFA5;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAS;;uBADtBC,mBAAA,CAIM,OAJNC,UAIM,GAHJC,mBAAA,CAEM,OAFNC,UAEM,I,kBADJH,mBAAA,CAAyEI,SAAA,QAAAC,WAAA,CAAnDC,MAAA,CAAAC,UAAU,EAApBC,MAAM;yBAAlBR,mBAAA,CAAyE;MAAtCS,GAAG,EAAED,MAAM,CAACE;wBAAMF,MAAM,CAACG,IAAI,IAAE,GAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}